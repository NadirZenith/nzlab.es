server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # xdebug in phpstorm needs hostname
    server_name default;
    root /srv/default;
    index index.php;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        #send_timeout 1800;
        #fastcgi_read_timeout 1800;
        fastcgi_param   SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;
        fastcgi_param   DOCUMENT_ROOT     $realpath_root;
        #fastcgi_param PHP_VALUE "error_log=/var/log/nginx/application_php_errors.log";
        #fastcgi_buffers 16 16k;
        #fastcgi_buffer_size 32k;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/default_error.log;
    access_log /var/log/nginx/default_access.log;
}

server {
    listen 82;
    listen [::]:82;

    server_name theme;
    root /srv/theme/dist;
    index /php/index.php;

    location / {
        try_files $uri /php/index.php$is_args$args;
    }

    location ~ ^/php/index\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param   SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;
        fastcgi_param   DOCUMENT_ROOT     $realpath_root;

        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/theme_error.log;
    access_log /var/log/nginx/theme_access.log;
}

server {
    #listen 81 ssl;
    listen 81;

 #   ssl_certificate     /etc/nginx/certs/fullchain.pem;
 #   ssl_certificate_key /etc/nginx/certs/privkey.pem;
 #   ssl_protocols       TLSv1.2 TLSv1.1 TLSv1;
 #   ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";


    server_name nzlab;
    root /srv/symfony/web;

    location ~ \.(jpe?g|png|gif)$ {
        return 404;
    }

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /app.php$is_args$args;
    }

    location ~ ^/app\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param   SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;
        fastcgi_param   DOCUMENT_ROOT     $realpath_root;

        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/symfony_error.log;
    access_log /var/log/nginx/symfony_access.log;
}

# static (no cookies)
server {

    #listen 83 ssl;
    listen 83;

    #ssl_certificate     /etc/nginx/certs/fullchain.pem;
    #ssl_certificate_key /etc/nginx/certs/privkey.pem;
    #ssl_protocols       TLSv1.2 TLSv1.1 TLSv1;
    #ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    access_log off;
    error_log off;

    server_name nzlab_static;

    root /srv/symfony/web;

    location ~ \.php$ {
        return 404;
    }

    location / {
        # try to serve file directly, fallback to index.php
        gzip_static on;
        expires max;
        add_header Cache-Control public;
        try_files $uri =404;
    }
}
